---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - Kevin Roe
thanks: "Code and data are available at: [https://github.com/Kanghyunroe/traffic_collisions/tree/main](https://github.com/Kanghyunroe/traffic_collisions/tree/main)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
toc: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(here)
library(arrow)
library(ggplot2)
library(modelsummary)
library(rstanarm)
library(knitr)
library(kableExtra)


# Read in Analysis Data
analysis_data <- read_parquet(file = here("data/02-analysis_data/analysis_data.parquet"), show_col_types = FALSE)
raw_data <- read_parquet(file = here("data/01-raw_data/raw_data.parquet"), show_col_types = FALSE)

# Read in Model Data 
prediction_model <- readRDS(file = here(
  "models/motor_fatality_prediction_model.rds"))
```


# Introduction

Automobile fatalities are a leading cause of death worldwide, posing a public health and safety concern for urban cities. For example, in 2024, thirty people have died on Toronto's roadways so far, which is a 20% increase from last year (insert citation, CBC). However, new headlines, such as CBCs, highlight that Motor Vehicle Collisions (MVC) tend to either be generalized as a summary statistic or typically fatal events are over analyzed to the extent that environmental factors surrounding the crash are ignored (CLARIFY). Moreover, general environmental factors such as the time of the crash or if a bicycle was involved in the accident are important to understand what increases the likelihood of a fatality occurring in an MVC. The use of statistical modeling on increasingly available vehicle collision data presents an opportunity to develop a nuanced understanding of what factors increases the likelihood for a fatality to occur in an accident. This paper uses the Toronto Police Service's  Annual Statistical Report from Open Data Toronto to analyze what factors are most responsible in predicting if a fatality occurs in a MVC.

The estimand of interest is the log-adjusted probability of a fatality occuring in a MVC. Specifically, we aim to quanitfy how specific environmental factors increase or decrease the likelihood of a fatality. By applying inferential analysis through Bayesian linear models, we assess not only the magnitude of these effects, but their underlying uncertainties (EDIT).

what was found (FINISH PARAGRAPH)

The paper is not only important from a public health perspective, but the paper also has policy development implications. Road safety and reducing fatal MVCs are a critical agenda item of any municipal government. The paper informs what factors increase the likelihood of death in an MVC, which informs policymakers' focus for relevant policy design. 

The remainder of this paper is structured as follows: @sec-data describes the dataset and methodology and @sec-model exhibits the use of inferential models. @Sec-results presents the results of the analysis, detailing the observed relationships between likelihood of death and various circumstantial factors. @sec-discussion discusses the broader implications and limitations of our findings.@sec-appendix presents a detailed idealized methodology to improve data collection, and additional model summary and diagnostic information.  

# Data {#sec-data}

## Overview

This dataset, "Police Annual Statistical Report - Traffic Collisions", was published and refreshed on October 21st, 2024, by the Toronto Police Service [insert citation]. The Toronto Police Service publishes various datasets on public safety and crime to inform the public about safety issues [@annual_statistics_report]. Data on traffic collisions is included in the Toronto Police Service's Annual Statistical Report, which also covers reported crimes, search of persons, firearms, and the Police Service's budget [@annual_statistics_report]. The data is collected using historical Motor Vehicle Collisions and classifies them into the following categories: 
* Property Damage (PD) Collisions
* Fail to Remain (FTR) Collisions, or commonly known as hit-and-run accidents
* Injury Collisions
* Fatalities 

Following the Municipal Freedom of Information and Protection of Privacy Act, the Toronto Police Service ensures to protect the privacy of individuals involved in the reported crimes when publishing the data. The dataset is updated annually, is open data, and can be used if an attribution statement @sec-appendix-attribution and is properly cited [@tphlicense]. Each entry in the dataset represents a singular vehicular accident and records all MVCs from 2015.  

There is an alternative dataset from the Toronto Police Service called "Motor Vehicle Collisions involving Killed or Seriously Injured Persons" (CITE). Unlike the alternative dataset, this paper's dataset focuses on all collisions, instead of only focusing on ones where someone was either killed or seriously injured. While the alternative dataset has more explanatory variables simply because more data is collected when someone dies or is seriously injured, this paper's aims to generalize if a fatality is more likely to occur based on the general circumstances surrounding a crash, such as the time of day or if property damage occurred. Thus, we ended up not going with the alternative dataset for this paper, but there are variables in the alternative dataset that may motivate future research on this subject. (EDIT TO MAKE MORE CLEAR)

The paper uses the R programming language [@citeR] to analyze the dataset. The tidyverse package was used to simulate the dataset. Also, the tidyverse [@citetidyverse], arrow [CITE] and opendatatoronto [@citeopendatatoronto] packages were used to download the Victims of Crime dataset. Then, the tidyverse [@citetidyverse] package was used to clean the raw dataset and generate tests. The testthat package [CITE THIS] was used to create tests for our cleaned dataset. Rstanarm [CITE], Arrow [CITE], and bayestestR [CITE] were used to create and test the model. Finally, ggplot2 [@citeggplot2], tidyverse [@citetidyverse], knitr [@citeknitr] and scales [@citescales] packages were used to create the tables and graphs to display the results. [edit this paragraph]

## Measurement

Transforming a real-life Motor Vehicle Collision to an entry in the dataset is a well-documented process by the Toronto Police Service. For insurance purposes, the Toronto Police Service requires drivers to fill out the Motor Vehicle Collision Report for any collisions that occur in Toronto (CITE). Drivers required to fill out a motor vehicle collision report if the combined damage is more than $2000, if someone is injured, if a criminal act such as a DUI occurs, or if a pedestrian is involved in the accident (CITE). These reports are retained for six years by the Toronto Police Service, with the exception of collisions resulting in a fatality, which are retained indefinitely. The form ensures documentation of collision characteristics, location, road condition, and the extent of damages, systematically recording the characteristics of each crash for further criminal investigation and data analysis.

For every collision, basic facts such as the location, time, and date of the collision is recorded through the Motor Vehicle Collision Report. Majority if not all the factors recorded in the dataset are all objective measurements regarding the specific details such as if a motorcycle was involved in the collision or if the collision resulted in property damage. All of these details are recorded in the Motor Vehicle Collision Report for all vehicular collisions and are entered into the dataset. However, while the Motor Vehicle Collision Report logs characteristics such as environmental conditions, alcohol involvement, or fatigue, the data set does not include them due to inconsistent data measurement techniques. Moreover, personal details such as the driver's age are not included to protect the driver's privacy.  

## Outcome variables

The main outcome variable records the number of fatalities for each MVC. According to the dataset, a fatal collision occurs when an individual's injuries from a collision results in a fatality within 30 days. Fatal collisions excludes occurences on private property, ones related to suddend eath prior to collision, such as suicide, and where the individuals has died more than 30 days after the collision. However, because we are more interested in predicting the probability that a fatality occurs than the number of fatalities, we transformed the variable that distinguishes collisions between if the collision resulted in any fatalities and those without fatalities. In the raw dataset, if there were no fatalities, the entry was recorded as NA, but if there were fatalities, then the number of fatalities were recorded. However, we transformed the dataset that all if a fatality occurred then fatalities indicates `1` and if there were no fatalities then the fatalities column records a '0'. The distribution of the raw dataset is shown in @fig-fatalities-raw. 

```{r}
#| label: fig-fatalities-raw
#| fig-cap: Distribution of Fatalities in the Raw Dataset  
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Plot distribution of Fatalies in the Raw Dataset 
ggplot(raw_data %>% mutate(FATALITIES = replace_na(FATALITIES, 0)), 
       aes(x = FATALITIES)) +
  geom_bar(fill = "orange", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Fatalities",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```
However, after the transformation, the outcome variable now takes on binary values and the distribution and summary statistics are shown below in @fig-fatalites-cleaned and @tbl-fatalites: 

```{r}
#| label: fig-fatalities-cleaned
#| fig-cap: Distribution of Fatalities in the Cleaned Dataset   
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Plot distribution of Fatalities
ggplot(analysis_data, aes(x = fatalities)) +
  geom_bar(fill = "green", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Fatalities",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-fatalities
#| tbl-cap: Number of unique high-quality polling organizations
#| tbl-align: center
#| tbl-width: 82%


# Calculate summary statistics for the 'fatalities' variable
summary_stats <- analysis_data %>%
  count(fatalities, name = "Fatalities")

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)

```
## Predictor variables

### Hour

The hour variable indicates the time at which the accident occurred using the 24 hour clock, such that a value of 0 represents 12 AM and 23 represents 11 PM. The distribution and summary statistics of the hour variable can be found in @fig-hour and @tbl-hour, respectively. @fig-hour highlights that the majority of accidents happen from 9 AM to 7 PM, which is reasonable as these times include rush hour, where the greatest number of people are driving at the same time for work or school. However, @tbl-hour also shows that a greater number of fatalities occur at night, which we hypothesize is due to lack of vision or reckless driving. 

```{r}
#| label: fig-hour
#| fig-cap: Distribution of the Hour Variable  
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Plot distribution of Hour Variable
ggplot(analysis_data, aes(x = hour)) +
  geom_bar(fill = "yellow", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Hour",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-hour
#| tbl-cap: The Summary of the Hour 
#| tbl-align: center
#| tbl-width: 82%


# Calculate summary statistics for the 'hour' variable
summary_stats <- analysis_data %>%
  group_by(hour) %>%
  summarize(
    "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
    "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
    Total = n()
  )

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)

```

### Type of Crash

Beyond identifying fatalities, the Motor Vehicle Collision Reports notes if the crash was one of three types: an injury collision, a fail to remain collision, and a property damage collision. A personal injury collision occur when an individual involved in a MVC suffers personal injuries. Fail to remain collisions are recorded when an individual involved in a collision fail to stop and provide their information at the scene of a collision. Property damage collisions occur when an individual has been damaged in a collision or the value of damages is less than $\2000 for all parties. The distribution and summary statistics of these three variables can be found in @fig-crashtype and @tbl-crashtype. The results in @tbl-crashtype show that crashes that classify under these three categories usually do not lead to death. 

```{r}
#| label: fig-crashtype
#| fig-cap: Breakdown of Each Collision Type by Fatalities  
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Reshape data to long format for easier plotting
analysis_data_long <- analysis_data %>%
  select(fatalities, injury_collision, fail_to_remain_collision, property_damage_collision) %>%
  gather(key = "collision_type", value = "collision", 
         injury_collision, fail_to_remain_collision, property_damage_collision)

# Plot the data
ggplot(analysis_data_long, aes(x = collision_type, fill = factor(fatalities))) +
  geom_bar(position = "dodge", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Collision Type", y = "Count") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(values = c("0" = "green", "1" = "red"), 
                    labels = c("0" = "No Fatalities", "1" = "Fatality Occurred")) +
  scale_x_discrete(labels = c("injury_collision" = "Injury Collision", 
                              "fail_to_remain_collision" = "Fail to Remain Collision", 
                              "property_damage_collision" = "Property Damage Collision"))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-crashtype
#| tbl-cap: Breakdown of MVCs Into the Different Categories, Broken Down by Fatalities
#| tbl-align: center
#| tbl-width: 82%

# Reshape data to long format for easier plotting


# Calculate summary statistics for the 'Collision Type' variable
summary_stats <- analysis_data %>%
  mutate(
    collision_type = case_when(
      injury_collision == 1 ~ "Injury Collision",
      fail_to_remain_collision == 1 ~ "Fail to Remain Collision",
      property_damage_collision == 1 ~ "Property Damage Collision",
      TRUE ~ "Not Applicable"
    )
  ) %>%
  group_by(collision_type) %>%
  summarize(
    "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
    "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
    Total = n()
  ) %>%
  # Add a row for total at the bottom
  bind_rows(
    summarize(
      analysis_data,
      collision_type = "Total",
      "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
      "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
      Total = n()
    )
  )

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)

```

### Automobile 

The automobile variable is a indicator variable to show if a collision involved a person in an automobile. In the raw dataset, the variable was labeled as Yes, No, None or N/R (Not Recorded). We labelled Not Recorded as NA because there is no reliable way of characterizing the variable. Further, we labeled No and None as 0 and Yes as 1, where 1 represents that an automobile was involved and 0 represents that an automobile was not, such as a crash between two motorcycles. We also employed this method for the following variables: motorcycle, passenger, and pedestrian. 

@fig-automobile and @tbl-automobile shows that 588 of 608 deaths happened when an automobile was involved, which is not surprising given majority of vehicles on the road are cars. 



```{r}
#| label: fig-automobile
#| fig-cap: Distribution of the Automobile Variable  
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Plot distribution of Hour Variable
ggplot(analysis_data, aes(x = automobile)) +
  geom_bar(fill = "purple", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Automobile",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-automobile
#| tbl-cap: Summary of the Automobile Variable 
#| tbl-align: center
#| tbl-width: 82%


# Calculate summary statistics for the 'hour' variable
summary_stats <- analysis_data %>%
  group_by(automobile) %>%
  summarize(
    "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
    "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
    Total = n()
  )

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
```

### Motorcycle

The motorcycle variable is another indicator variable to show that whether the collision involved a person in a motorcycle. 1 represents that a motorcycle was involved and 0 represents that a motorcycle was not involved in the crash. @fig-motorcycle and @tbl-motorcycle shows the distribution and summary of the motorcycle variable, respectively. @tbl-motorcycle shows that only 75 vehicular deaths involved a motorcycle. 

```{r}
#| label: fig-automobile
#| fig-cap: Distribution of the Automobile Variable  
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Plot distribution of Hour Variable
ggplot(analysis_data, aes(x = motorcycle)) +
  geom_bar(fill = "orange", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Motorcycle",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-motorcycle
#| tbl-cap: Summary of the Automobile Variable 
#| tbl-align: center
#| tbl-width: 82%


# Calculate summary statistics for the 'hour' variable
summary_stats <- analysis_data %>%
  group_by(motorcycle) %>%
  summarize(
    "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
    "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
    Total = n()
  )

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
```
### Passenger

The passenger variable is an indicator variable that highlights if the collision involved a passenger in a motor vehicle. 1 represents there was a passenger and 0 shows that there was not a passenger involved. @fig-passenger and @tbl-passenger shows the distribution and summary of the passenger variable, respectively. @tbl-passenger shows that 177 vehicular deaths involved a passenger. 

```{r}
#| label: fig-passenger
#| fig-cap: Distribution of the Passenger Variable  
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Plot distribution of Hour Variable
ggplot(analysis_data, aes(x = passenger)) +
  geom_bar(fill = "blue", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Passenger",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-passenger
#| tbl-cap: Summary of the Passenger Variable 
#| tbl-align: center
#| tbl-width: 82%


# Calculate summary statistics for the 'hour' variable
summary_stats <- analysis_data %>%
  group_by(passenger) %>%
  summarize(
    "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
    "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
    Total = n()
  )

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
```
### Pedestrian

The pedestrian variable is an indicator variable that highlights if the collision involved a pedestrian. 1 represents a pedestrian was involved and 0 shows that there was no pedestrian. @fig-pedestrian and @tbl-pedestrian shows the distribution and summary of the pedestrian variable, respectively. @tbl-pedestrian highlights that of 606 deaths, 342 deaths involved pedestrians, which is a significant percentage. 

```{r}
#| label: fig-pedestrian
#| fig-cap: Distribution of the Pedestrian Variable  
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Plot distribution of Hour Variable
ggplot(analysis_data, aes(x = pedestrian)) +
  geom_bar(fill = "red", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Pedestrian",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-pedestrian
#| tbl-cap: Summary of the Pedestrian Variable 
#| tbl-align: center
#| tbl-width: 82%


# Calculate summary statistics for the 'hour' variable
summary_stats <- analysis_data %>%
  group_by(pedestrian) %>%
  summarize(
    "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
    "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
    Total = n()
  )

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
```
### Police Division

The Police Division variable represents the police division where the collision occured. The paper plans to include the police division variable as a general proxy for location and account if certain areas are more susceptible to crashes than others. @fig-division and @tbl-division shows the distirbution and breakdown of MVCs among police departments.Based on the @tbl-division, there seems to be no discernible pattern but D41 and D42 have the highest number of vehicular fatalities at 63 and 66, respectively. 

```{r}
#| label: fig-division
#| fig-cap: Distribution of the Police Division
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

# Plot distribution of Hour Variable
ggplot(analysis_data, aes(x = police_division)) +
  geom_bar(fill = "magenta", alpha = 0.7, color = "black") +
  theme_minimal() +
  labs(x = "Police Division",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-division
#| tbl-cap: Summary of the Police Divison Variable 
#| tbl-align: center
#| tbl-width: 82%

# Calculate summary statistics for the 'hour' variable
summary_stats <- analysis_data %>%
  group_by(police_division) %>%
  summarize(
    "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
    "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
    Total = n()
  )

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
```

### Year 

The year variable shows the number of MVCs per year. @fig-year and @tbl-year shows the number of MVCs over time. Looking at @fig-year and @tbl-year there is a noticeable dip in MVCs in 2020 and 2021 due to COVID-19 but MVC levels have not hit their 2019 peaks most likely due to people in Toronto not driving as much as before. However, idea of fewer drivers is a hypothesis and needs further research. 

```{r}
#| label: fig-year
#| fig-cap: Number of MVCs per Year
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 2.5
#| fig-align: center

year_count <- analysis_data %>%
  count(year, name = "count")

# Plot distribution of Year Variable
ggplot(year_count, aes(x = year, y = count, group = 1)) +
  geom_line(color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(x = "Year",
       y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-year
#| tbl-cap: Summary of Number of MVCs by Year
#| tbl-align: center
#| tbl-width: 82%

# Calculate summary statistics for the 'hour' variable
summary_stats <- analysis_data %>%
  group_by(year) %>%
  summarize(
    "No Fatalities" = sum(fatalities == 0, na.rm = TRUE),
    "Fatality Occurred" = sum(fatalities == 1, na.rm = TRUE),
    Total = n()
  )

# Display the summary statistics in a nicely formatted table
summary_stats %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
```

### Interaction Terms
Why you have interaction between hour and all these things


# Model

The study aims to predict the likelihood of fatality in a car crash. The model was implemeneted using the rstatarm package in R, leveraging its framework for Baysian regression modelling. 

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
 # list(
  #  "First model" = first_model
  #),
  #statistic = "mad",
  #fmt = 2
#)
```


# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In we implement a posterior predictive check. This shows...

In we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

#pp_check(first_model) +
  #theme_classic() +
 # theme(legend.position = "bottom")

#posterior_vs_prior(first_model) +
 # theme_minimal() +
  #scale_color_brewer(palette = "Set1") +
 # theme(legend.position = "bottom") +
 # coord_flip()
```

## Diagnostics

is a trace plot. It shows... This suggests...

is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

#plot(first_model, "trace")

#plot(first_model, "rhat")
```



\newpage


# References


